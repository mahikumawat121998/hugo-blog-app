<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>React on Lama dev blog</title>
    <link>http://localhost:51236/categories/react/</link>
    <description>Recent content in React on Lama dev blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 22 Nov 2023 16:55:24 +0100</lastBuildDate>
    <atom:link href="http://localhost:51236/categories/react/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Understanding useEffect in React: Use Cases, Examples &amp; Best Practices</title>
      <link>http://localhost:51236/my-sixth-post/</link>
      <pubDate>Wed, 22 Nov 2023 16:55:24 +0100</pubDate>
      <guid>http://localhost:51236/my-sixth-post/</guid>
      <description>&lt;p&gt;The &lt;code&gt;useEffect&lt;/code&gt; Hook is a fundamental aspect of React that allows developers to handle side effects in functional components. Introduced in React 16.8, it replaces the need for class-based lifecycle methods, enabling a more streamlined approach to managing side effects such as data fetching, subscriptions, or manually changing the DOM.&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Understanding &lt;code&gt;useEffect&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;In functional components, side effects are operations that interact with the outside world or affect the component outside of rendering, such as fetching data from an API, setting up a subscription, or manually manipulating the DOM. The &lt;code&gt;useEffect&lt;/code&gt; Hook provides a way to perform these side effects.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
