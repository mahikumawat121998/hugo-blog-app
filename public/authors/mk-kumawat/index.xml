<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MK Kumawat on Lama dev blog</title>
    <link>http://localhost:1313/authors/mk-kumawat/</link>
    <description>Recent content in MK Kumawat on Lama dev blog</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 13 Mar 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/authors/mk-kumawat/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Authentication with Next.js and Prisma</title>
      <link>http://localhost:1313/authentication-nextjs-prisma/</link>
      <pubDate>Thu, 13 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/authentication-nextjs-prisma/</guid>
      <description>&lt;p&gt;Test Connection&lt;/p&gt;</description>
    </item>
    <item>
      <title>Express vs NestJS: Which One Should You Choose?</title>
      <link>http://localhost:1313/my-seventh-post/</link>
      <pubDate>Thu, 13 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/my-seventh-post/</guid>
      <description>&lt;p&gt;When it comes to backend development in &lt;strong&gt;Node.js&lt;/strong&gt;, two names frequently stand out: &lt;strong&gt;Express.js&lt;/strong&gt; and &lt;strong&gt;NestJS&lt;/strong&gt;. While both are powerful and widely used, they differ greatly in terms of architecture, scalability, learning curve, and developer experience.&lt;/p&gt;&#xA;&lt;p&gt;In this blog post, letâ€™s explore the differences, use cases, pros and cons of &lt;strong&gt;Express.js&lt;/strong&gt; and &lt;strong&gt;NestJS&lt;/strong&gt;, so you can decide which framework suits your next project best.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-what-is-expressjs&#34;&gt;ðŸ§  What is Express.js?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://expressjs.com/&#34;&gt;Express.js&lt;/a&gt; is a &lt;strong&gt;minimal and flexible Node.js web application framework&lt;/strong&gt; that provides a robust set of features for web and mobile applications. Itâ€™s been around since 2010 and is known for its simplicity and speed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Express.js vs NestJS: Which One Should You Choose?</title>
      <link>http://localhost:1313/express-js-vs-nest-js/</link>
      <pubDate>Thu, 13 Mar 2025 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/express-js-vs-nest-js/</guid>
      <description>&lt;p&gt;When it comes to backend development in &lt;strong&gt;Node.js&lt;/strong&gt;, two names frequently stand out: &lt;strong&gt;Express.js&lt;/strong&gt; and &lt;strong&gt;NestJS&lt;/strong&gt;. While both are powerful and widely used, they differ greatly in terms of architecture, scalability, learning curve, and developer experience.&lt;/p&gt;&#xA;&lt;p&gt;In this blog post, letâ€™s explore the differences, use cases, pros and cons of &lt;strong&gt;Express.js&lt;/strong&gt; and &lt;strong&gt;NestJS&lt;/strong&gt;, so you can decide which framework suits your next project best.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;-what-is-expressjs&#34;&gt;ðŸ§  What is Express.js?&lt;/h2&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://expressjs.com/&#34;&gt;Express.js&lt;/a&gt; is a &lt;strong&gt;minimal and flexible Node.js web application framework&lt;/strong&gt; that provides a robust set of features for web and mobile applications. Itâ€™s been around since 2010 and is known for its simplicity and speed.&lt;/p&gt;</description>
    </item>
    <item>
      <title>5 CSS Tips and Tricks Every Web Developer Should Know</title>
      <link>http://localhost:1313/my-third-post/</link>
      <pubDate>Wed, 22 Nov 2023 16:55:24 +0100</pubDate>
      <guid>http://localhost:1313/my-third-post/</guid>
      <description>&lt;p&gt;Letâ€™s explore some essential CSS tips and tricks that will help you streamline your web design process and build stunning, creative websites.&lt;/p&gt;&#xA;&lt;p&gt;Before starting, I want to add here the video version of this blog post for visual-learners :)&lt;/p&gt;&#xA;&lt;p&gt;For others letâ€™s get started.&lt;/p&gt;&#xA;&lt;h3 id=&#34;css-clip-path&#34;&gt;CSS Clip-Path&lt;/h3&gt;&#xA;&lt;p&gt;Clip path allows you to create custom shapes by clipping the visible area of an HTML element. You can think of it as a virtual pair of scissors that allows you to cut and reshape your items. By manipulating this property, you can create various shapes and effects that go beyond the typical rectangles and squares.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
